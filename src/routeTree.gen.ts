/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TermsOfServiceLazyImport = createFileRoute('/terms-of-service')()
const PrivacyPolicyLazyImport = createFileRoute('/privacy-policy')()
const PageNotFoundLazyImport = createFileRoute('/page-not-found')()
const AllYouCanEatPolicyLazyImport = createFileRoute(
  '/all-you-can-eat-policy',
)()
const AboutUsLazyImport = createFileRoute('/about-us')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TermsOfServiceLazyRoute = TermsOfServiceLazyImport.update({
  id: '/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/terms-of-service.lazy').then((d) => d.Route),
)

const PrivacyPolicyLazyRoute = PrivacyPolicyLazyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/privacy-policy.lazy').then((d) => d.Route),
)

const PageNotFoundLazyRoute = PageNotFoundLazyImport.update({
  id: '/page-not-found',
  path: '/page-not-found',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/page-not-found.lazy').then((d) => d.Route),
)

const AllYouCanEatPolicyLazyRoute = AllYouCanEatPolicyLazyImport.update({
  id: '/all-you-can-eat-policy',
  path: '/all-you-can-eat-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/all-you-can-eat-policy.lazy').then((d) => d.Route),
)

const AboutUsLazyRoute = AboutUsLazyImport.update({
  id: '/about-us',
  path: '/about-us',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about-us.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about-us': {
      id: '/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof AboutUsLazyImport
      parentRoute: typeof rootRoute
    }
    '/all-you-can-eat-policy': {
      id: '/all-you-can-eat-policy'
      path: '/all-you-can-eat-policy'
      fullPath: '/all-you-can-eat-policy'
      preLoaderRoute: typeof AllYouCanEatPolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/page-not-found': {
      id: '/page-not-found'
      path: '/page-not-found'
      fullPath: '/page-not-found'
      preLoaderRoute: typeof PageNotFoundLazyImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/terms-of-service': {
      id: '/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof TermsOfServiceLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about-us': typeof AboutUsLazyRoute
  '/all-you-can-eat-policy': typeof AllYouCanEatPolicyLazyRoute
  '/page-not-found': typeof PageNotFoundLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/terms-of-service': typeof TermsOfServiceLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about-us': typeof AboutUsLazyRoute
  '/all-you-can-eat-policy': typeof AllYouCanEatPolicyLazyRoute
  '/page-not-found': typeof PageNotFoundLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/terms-of-service': typeof TermsOfServiceLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about-us': typeof AboutUsLazyRoute
  '/all-you-can-eat-policy': typeof AllYouCanEatPolicyLazyRoute
  '/page-not-found': typeof PageNotFoundLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/terms-of-service': typeof TermsOfServiceLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about-us'
    | '/all-you-can-eat-policy'
    | '/page-not-found'
    | '/privacy-policy'
    | '/terms-of-service'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about-us'
    | '/all-you-can-eat-policy'
    | '/page-not-found'
    | '/privacy-policy'
    | '/terms-of-service'
  id:
    | '__root__'
    | '/'
    | '/about-us'
    | '/all-you-can-eat-policy'
    | '/page-not-found'
    | '/privacy-policy'
    | '/terms-of-service'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutUsLazyRoute: typeof AboutUsLazyRoute
  AllYouCanEatPolicyLazyRoute: typeof AllYouCanEatPolicyLazyRoute
  PageNotFoundLazyRoute: typeof PageNotFoundLazyRoute
  PrivacyPolicyLazyRoute: typeof PrivacyPolicyLazyRoute
  TermsOfServiceLazyRoute: typeof TermsOfServiceLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutUsLazyRoute: AboutUsLazyRoute,
  AllYouCanEatPolicyLazyRoute: AllYouCanEatPolicyLazyRoute,
  PageNotFoundLazyRoute: PageNotFoundLazyRoute,
  PrivacyPolicyLazyRoute: PrivacyPolicyLazyRoute,
  TermsOfServiceLazyRoute: TermsOfServiceLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about-us",
        "/all-you-can-eat-policy",
        "/page-not-found",
        "/privacy-policy",
        "/terms-of-service"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about-us": {
      "filePath": "about-us.lazy.tsx"
    },
    "/all-you-can-eat-policy": {
      "filePath": "all-you-can-eat-policy.lazy.tsx"
    },
    "/page-not-found": {
      "filePath": "page-not-found.lazy.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.lazy.tsx"
    },
    "/terms-of-service": {
      "filePath": "terms-of-service.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
